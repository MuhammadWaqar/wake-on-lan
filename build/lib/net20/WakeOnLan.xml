<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WakeOnLan</name>
    </assembly>
    <members>
        <member name="T:System.Net.ArpRequest">
            <summary>Provides methods for sending requests using the ARP protocol.</summary>
            <summary xml:lang="de">Stellt Methoden für das Senden von Anfragen über das ARP-Protokoll bereit.</summary>
        </member>
        <member name="M:System.Net.ArpRequest.Send(System.Net.IPAddress)">
            <summary>
            Sendet eine Anfrage über das ARP-Protokoll, um eine IP-Adresse in die Physikalische Adresse aufzulösen. Falls sich die physikalische Adresse bereits im Cache des Hosts befindet, wird diese zurückgegeben.
            </summary>
            <param name="destination">Die Ziel-IPAdress</param>
            <returns>Eine <see cref="T:System.Net.ArpRequestResult">ArpRequestResult</see>-Instanz, welche die Ergebnisse der Anfrage enthält.</returns>
        </member>
        <member name="T:System.Net.ArpRequestResult">
            <summary>
            Enthält die Rückgabewerte der ArpRequest.Send-Funktion.
            </summary>
        </member>
        <member name="M:System.Net.ArpRequestResult.#ctor(System.Net.NetworkInformation.PhysicalAddress)">
            <summary>Erstellt eine neue ArpRequestResult-Instanz</summary>
            <param name="address">Die physikalische Adresse</param>
        </member>
        <member name="M:System.Net.ArpRequestResult.#ctor(System.Exception)">
            <summary>Erstellt eine neue ArpRequestResult-Instanz</summary>
            <param name="exception">Der aufgetretene Fehler</param>
        </member>
        <member name="M:System.Net.ArpRequestResult.ToString">
            <summary>Konvertiert ARP-Rückgabewerte in eine Zeichenfolge.</summary>
        </member>
        <member name="P:System.Net.ArpRequestResult.Exception">
            <summary>Falls Fehler bei der Protokollanfrage auftreten, werden diese in dieser Eigenschaft abgelegt. Andernfalls null.</summary>
        </member>
        <member name="P:System.Net.ArpRequestResult.Address">
            <summary>Die aufgelöste physikalische Adresse.</summary>
        </member>
        <member name="T:System.Net.PhysicalAddressAdministrator">
            <summary>
            Der Administrator der physikalischen Adresse gibt an, ob die Adresse globally unique oder local administrated ist.
            </summary>
        </member>
        <member name="F:System.Net.PhysicalAddressAdministrator.Global">
            <summary>
            Die Adresse ist global einzigartig (nach der OUI).
            </summary>
        </member>
        <member name="F:System.Net.PhysicalAddressAdministrator.Local">
            <summary>
            Die Adresse ist lokal administriert.
            </summary>
        </member>
        <member name="T:System.Net.PhysicalAddressType">
            <summary>
            Der Typ der physikalischen Adresse gibt an, ob es um eine UNicast oder Multicast-Adresse handelt.
            </summary>
        </member>
        <member name="F:System.Net.PhysicalAddressType.Unicast">
            <summary>
            Bezeichnet eine Unicast-Adresse.
            </summary>
        </member>
        <member name="F:System.Net.PhysicalAddressType.Multicast">
            <summary>
            Bezeichnet eine Multicast-Adresse
            </summary>
        </member>
        <member name="T:System.Net.SecureOnPassword">
            <summary>
            Stellt ein SecureOn-Passwort bereit.
            </summary>
        </member>
        <member name="M:System.Net.SecureOnPassword.#ctor(System.Byte[])">
            <summary>
            Initialisiert eine neue Instanz der System.Net.SecureOnPassword-Klasse mit dem angegebenen Passwort.
            </summary>
            <param name="password">Das Passwort als System.Byte-Array.</param>
            <exception cref="T:System.ArgumentNullException">password ist null.</exception>
            <exception cref="T:System.ArgumentException">Das System.Byte-Array password hat eine Länge ungleich 6.</exception>
        </member>
        <member name="M:System.Net.SecureOnPassword.GetPasswordBytes">
            <summary>Ruft die Passwortdaten des SecureOn-Passworts ab.</summary>
        </member>
        <member name="M:System.Net.SecureOnPassword.#ctor(System.String)">
            <summary>
            Initialisiert eine neue Instanz der System.Net.SecureOnPassword-Klasse mit dem angegebenen Passwort.
            </summary>
            <param name="password">Das Passwort als Zeichenfolge.</param>
            <remarks >Verwendet System.Text.Encoding.Default als Kodierung.</remarks>
        </member>
        <member name="M:System.Net.SecureOnPassword.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initialisiert eine neue Instanz der System.Net.SecureOnPassword-Klasse mit dem angegebenen Passwort.
            </summary>
            <param name="password">Das Passwort als Zeichenfolge.</param>
            <param name="encoding">Die System.Text.Encoding-Instanz für das Passwort.</param>
            <exception cref="T:System.ArgumentNullException">encoding ist null.</exception>
            <exception cref="T:System.ArgumentException">Das System.Byte-Array, welches aus dem Passwort resultiert, hat eine Länge größer 6.</exception>
        </member>
        <member name="M:System.Net.SecureOnPassword.ToString">
            <summary>Konvertiert SecureOn-Passwörter in die Strichnotation.</summary>
            <returns>Eine Zeichenfolge mit einem SecureOn-Passwort in Strichnotation.</returns>
        </member>
        <member name="M:System.Net.SecureOnPassword.ToString(System.String)">
            <summary>Konvertiert SecureOn-Passwörter in die Strichnotation.</summary>
            <returns>Eine Zeichenfolge mit einem SecureOn-Passwort in Strichnotation.</returns>
        </member>
        <member name="M:System.Net.SecureOnPassword.ToString(System.IFormatProvider)">
            <summary>Konvertiert SecureOn-Passwörter in die Strichnotation.</summary>
            <returns>Eine Zeichenfolge mit einem SecureOn-Passwort in Strichnotation.</returns>
        </member>
        <member name="T:System.Net.SendWol">
            <summary>
            Stellt Methoden für das Senden von Wake-On-LAN-Signalen bereit.
            </summary>
        </member>
        <member name="M:System.Net.SendWol.Send(System.Net.IPEndPoint,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sendet ein Wake-On-LAN-Signal an einen Client.
            </summary>
            <param name="target">Der Ziel-IPEndPoint.</param>
            <param name="mac0">Erstes MAC-Adress-Byte.</param>
            <param name="mac1">Zweites MAC-Adress-Byte.</param>
            <param name="mac2">Drittes MAC-Adress-Byte.</param>
            <param name="mac3">Viertes MAC-Adress-Byte.</param>
            <param name="mac4">Fünftes MAC-Adress-Byte.</param>
            <param name="mac5">Sechstes MAC-Adress-Byte.</param>
            <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
        </member>
        <member name="M:System.Net.SendWol.Send(System.Net.IPEndPoint,System.Byte[])">
             <summary>
             Sendet ein Wake-On-LAN-Signal an einen Client.
             </summary>
             <param name="target">Der Ziel-IPEndPoint.</param>
             <param name="macAddress">Die MAC-Adresse des Clients.</param>
            <exception cref="T:System.ArgumentException">Die Länge dere <see cref="T:System.Byte"/>-Arrays macAddress ist nicht 6.</exception>
             <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
             <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
        </member>
        <member name="M:System.Net.SendWol.Send(System.Net.IPEndPoint,System.Byte[],System.Net.SecureOnPassword)">
            <summary>
            Sendet ein Wake-On-LAN-Signal an einen Client.
            </summary>
            <param name="target">Der Ziel-IPEndPoint.</param>
            <param name="macAddress">Die MAC-Adresse des Clients.</param>
            <param name="password">Das SecureOn-Passwort des Clients.</param>
            <exception cref="T:System.ArgumentException">Die Länge des <see cref="T:System.Byte"/>-Arrays macAddress ist nicht 6.</exception>
            <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
            <exception cref="T:System.ArgumentNullException">password ist null.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
        </member>
        <member name="M:System.Net.SendWol.Send(System.Net.IPEndPoint,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Sendet ein Wake-On-LAN-Signal an einen Client.
            </summary>
            <param name="target">Der Ziel-IPEndPoint.</param>
            <param name="macAddress">Die MAC-Adresse des Clients.</param>
            <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
        </member>
        <member name="M:System.Net.SendWol.Send(System.Net.IPEndPoint,System.Net.NetworkInformation.PhysicalAddress,System.Net.SecureOnPassword)">
            <summary>
            Sendet ein Wake-On-LAN-Signal an einen Client.
            </summary>
            <param name="target">Der Ziel-IPEndPoint.</param>
            <param name="macAddress">Die MAC-Adresse des Clients.</param>
            <param name="password">Das SecureOn-Passwort des Clients.</param>
            <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
            <exception cref="T:System.ArgumentNullException">password ist null.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
        </member>
        <member name="M:System.Net.SendWol.GetWolPacket(System.Byte[])">
            <exception cref="T:System.ArgumentException">Die Länge des <see cref="T:System.Byte"/>-Arrays ist nicht 6.</exception>
            <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
        </member>
        <member name="M:System.Net.SendWol.GetWolPacket(System.Byte[],System.Byte[])">
            <exception cref="T:System.ArgumentException">Die Länge des <see cref="T:System.Byte"/>-Arrays macAddress ist nicht 6.</exception>
            <exception cref="T:System.ArgumentNullException">macAddress ist null.</exception>
            <exception cref="T:System.ArgumentException">Die Länge des <see cref="T:System.Byte"/>-Arrays password ist nicht 6.</exception>
            <exception cref="T:System.ArgumentNullException">password ist null.</exception>
        </member>
    </members>
</doc>
